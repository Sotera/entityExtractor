extends /modules/core/views/layouts/layout
block content
  .row
    .col-md-1
    .col-md-10
      .row
        .col-md-12
          h3 Threat Detection
      .row
        .col-md-12
          form#archive-form
            .form-group
              label URL to zip file
              input#archive-url.form-control(name='images_url' placeholder='https://s3.amazonaws.com/bucket/images.zip' value='https://s3.amazonaws.com/watchman/threats/day.zip')
            .form-group
              label.radio-inline
                input(type='radio' value='day' name='tod' checked)
                | Day
              label.radio-inline
                input(type='radio' value='night' name='tod')
                | Night
            .form-group
              button.btn.btn-primary(type='submit') Run Detection
      .row#images-container(style='margin-top:20px')

    .col-md-1

block scripts
  script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js')

  script.
    var wsUrl = (window.WatchmanEnv || {}).WEBSOCKET_URL || 'http://localhost:4000'
    var socket = io(`${wsUrl}/threat`)
    var $body = $('body')
    var $imgContainer = $('#images-container')
    var spinner = new Spinner({scale: 3, lines: 10})

    socket.on('connect', console.info)
    socket.on('disconnect', console.info)
    socket.on('detect', job => {
      if (job.error) {
        handleError(new Error(job.error))
      } else {
        console.info(job)
        showImages(JSON.parse(job.data))
        spinner.stop()
      }
    });

    $('#archive-form').submit(function(e) {
      e.preventDefault()
      spinner.spin($body[0])
      socket.emit('detect', {
        archive_url: $('#archive-url').val(),
        time_of_day: $('input[name="tod"]:checked').val()
      })
    })

    function handleError(err) {
      spinner.stop()
      console.error(err)
      alert('Oops, an error occurred')
    }

    function showImages(images) {
      $imgContainer.empty()
      images.forEach(addToGrid)
    }

    function addToGrid(image) {
      // remove path part not mapped to virtual path
      var src = image.name.replace(/^\/downloads/i, '')
      var color = image.classification === 'threat' ?
        'bg-danger' :
        'bg-success'
      var $div = $('<div class="col-md-2" style="height:200px" onclick="window.open(\'' + src + '\')">')
      var $label = $('<p class="' + color + '">' + image.classification + '</p>')
      var $img = $('<img width="100%" src="' + src + '">')

      $imgContainer.append($div.append($label.append($img)))
    }
